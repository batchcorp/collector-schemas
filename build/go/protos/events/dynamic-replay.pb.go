// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dynamic-replay.proto

package events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DynamicReplay_Type int32

const (
	DynamicReplay_UNSET DynamicReplay_Type = 0
	// Sent by plumber to dProxy
	DynamicReplay_AUTH_REQUEST DynamicReplay_Type = 1
	// Sent by dProxy to plumber
	DynamicReplay_AUTH_RESPONSE DynamicReplay_Type = 2
	// Sent by dProxy to plumber
	// Contains an events.Outbound message with a replay payload
	DynamicReplay_OUTBOUND_MESSAGE DynamicReplay_Type = 3
	// Sent by dProxy to plumber
	// Replicates an ISB replay event message for display in plumber logs
	DynamicReplay_REPLAY_EVENT DynamicReplay_Type = 4
)

var DynamicReplay_Type_name = map[int32]string{
	0: "UNSET",
	1: "AUTH_REQUEST",
	2: "AUTH_RESPONSE",
	3: "OUTBOUND_MESSAGE",
	4: "REPLAY_EVENT",
}

var DynamicReplay_Type_value = map[string]int32{
	"UNSET":            0,
	"AUTH_REQUEST":     1,
	"AUTH_RESPONSE":    2,
	"OUTBOUND_MESSAGE": 3,
	"REPLAY_EVENT":     4,
}

func (x DynamicReplay_Type) String() string {
	return proto.EnumName(DynamicReplay_Type_name, int32(x))
}

func (DynamicReplay_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2e3c3965895a4ee3, []int{0, 0}
}

type ReplayEvent_Type int32

const (
	ReplayEvent_UNSET         ReplayEvent_Type = 0
	ReplayEvent_CREATE_REPLAY ReplayEvent_Type = 1
	ReplayEvent_PAUSE_REPLAY  ReplayEvent_Type = 2
	ReplayEvent_RESUME_REPLAY ReplayEvent_Type = 3
	ReplayEvent_ABORT_REPLAY  ReplayEvent_Type = 4
	ReplayEvent_FINISH_REPLAY ReplayEvent_Type = 5
)

var ReplayEvent_Type_name = map[int32]string{
	0: "UNSET",
	1: "CREATE_REPLAY",
	2: "PAUSE_REPLAY",
	3: "RESUME_REPLAY",
	4: "ABORT_REPLAY",
	5: "FINISH_REPLAY",
}

var ReplayEvent_Type_value = map[string]int32{
	"UNSET":         0,
	"CREATE_REPLAY": 1,
	"PAUSE_REPLAY":  2,
	"RESUME_REPLAY": 3,
	"ABORT_REPLAY":  4,
	"FINISH_REPLAY": 5,
}

func (x ReplayEvent_Type) String() string {
	return proto.EnumName(ReplayEvent_Type_name, int32(x))
}

func (ReplayEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2e3c3965895a4ee3, []int{3, 0}
}

// DynamicReplay is an envelope message for dynamic replay communication from dproxy to plumber
type DynamicReplay struct {
	Type     DynamicReplay_Type `protobuf:"varint,1,opt,name=type,proto3,enum=events.DynamicReplay_Type" json:"type,omitempty"`
	ReplayId string             `protobuf:"bytes,2,opt,name=replay_id,json=replayId,proto3" json:"replay_id,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*DynamicReplay_AuthRequest
	//	*DynamicReplay_AuthResponse
	//	*DynamicReplay_OutboundMessage
	//	*DynamicReplay_ReplayMessage
	Payload              isDynamicReplay_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *DynamicReplay) Reset()         { *m = DynamicReplay{} }
func (m *DynamicReplay) String() string { return proto.CompactTextString(m) }
func (*DynamicReplay) ProtoMessage()    {}
func (*DynamicReplay) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3c3965895a4ee3, []int{0}
}

func (m *DynamicReplay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicReplay.Unmarshal(m, b)
}
func (m *DynamicReplay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicReplay.Marshal(b, m, deterministic)
}
func (m *DynamicReplay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicReplay.Merge(m, src)
}
func (m *DynamicReplay) XXX_Size() int {
	return xxx_messageInfo_DynamicReplay.Size(m)
}
func (m *DynamicReplay) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicReplay.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicReplay proto.InternalMessageInfo

func (m *DynamicReplay) GetType() DynamicReplay_Type {
	if m != nil {
		return m.Type
	}
	return DynamicReplay_UNSET
}

func (m *DynamicReplay) GetReplayId() string {
	if m != nil {
		return m.ReplayId
	}
	return ""
}

type isDynamicReplay_Payload interface {
	isDynamicReplay_Payload()
}

type DynamicReplay_AuthRequest struct {
	AuthRequest *AuthRequest `protobuf:"bytes,100,opt,name=auth_request,json=authRequest,proto3,oneof"`
}

type DynamicReplay_AuthResponse struct {
	AuthResponse *AuthResponse `protobuf:"bytes,101,opt,name=auth_response,json=authResponse,proto3,oneof"`
}

type DynamicReplay_OutboundMessage struct {
	OutboundMessage *Outbound `protobuf:"bytes,102,opt,name=outbound_message,json=outboundMessage,proto3,oneof"`
}

type DynamicReplay_ReplayMessage struct {
	ReplayMessage *ReplayEvent `protobuf:"bytes,103,opt,name=replay_message,json=replayMessage,proto3,oneof"`
}

func (*DynamicReplay_AuthRequest) isDynamicReplay_Payload() {}

func (*DynamicReplay_AuthResponse) isDynamicReplay_Payload() {}

func (*DynamicReplay_OutboundMessage) isDynamicReplay_Payload() {}

func (*DynamicReplay_ReplayMessage) isDynamicReplay_Payload() {}

func (m *DynamicReplay) GetPayload() isDynamicReplay_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *DynamicReplay) GetAuthRequest() *AuthRequest {
	if x, ok := m.GetPayload().(*DynamicReplay_AuthRequest); ok {
		return x.AuthRequest
	}
	return nil
}

func (m *DynamicReplay) GetAuthResponse() *AuthResponse {
	if x, ok := m.GetPayload().(*DynamicReplay_AuthResponse); ok {
		return x.AuthResponse
	}
	return nil
}

func (m *DynamicReplay) GetOutboundMessage() *Outbound {
	if x, ok := m.GetPayload().(*DynamicReplay_OutboundMessage); ok {
		return x.OutboundMessage
	}
	return nil
}

func (m *DynamicReplay) GetReplayMessage() *ReplayEvent {
	if x, ok := m.GetPayload().(*DynamicReplay_ReplayMessage); ok {
		return x.ReplayMessage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DynamicReplay) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DynamicReplay_AuthRequest)(nil),
		(*DynamicReplay_AuthResponse)(nil),
		(*DynamicReplay_OutboundMessage)(nil),
		(*DynamicReplay_ReplayMessage)(nil),
	}
}

type AuthRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	MessageBus           string   `protobuf:"bytes,2,opt,name=message_bus,json=messageBus,proto3" json:"message_bus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3c3965895a4ee3, []int{1}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AuthRequest) GetMessageBus() string {
	if m != nil {
		return m.MessageBus
	}
	return ""
}

type AuthResponse struct {
	// Whether or not the connection is authorized
	Authorized bool `protobuf:"varint,1,opt,name=authorized,proto3" json:"authorized,omitempty"`
	// Error message if any
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3c3965895a4ee3, []int{2}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetAuthorized() bool {
	if m != nil {
		return m.Authorized
	}
	return false
}

func (m *AuthResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReplayEvent struct {
	Type                 ReplayEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=events.ReplayEvent_Type" json:"type,omitempty"`
	ReplayId             string           `protobuf:"bytes,2,opt,name=replay_id,json=replayId,proto3" json:"replay_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReplayEvent) Reset()         { *m = ReplayEvent{} }
func (m *ReplayEvent) String() string { return proto.CompactTextString(m) }
func (*ReplayEvent) ProtoMessage()    {}
func (*ReplayEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3c3965895a4ee3, []int{3}
}

func (m *ReplayEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplayEvent.Unmarshal(m, b)
}
func (m *ReplayEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplayEvent.Marshal(b, m, deterministic)
}
func (m *ReplayEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplayEvent.Merge(m, src)
}
func (m *ReplayEvent) XXX_Size() int {
	return xxx_messageInfo_ReplayEvent.Size(m)
}
func (m *ReplayEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplayEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ReplayEvent proto.InternalMessageInfo

func (m *ReplayEvent) GetType() ReplayEvent_Type {
	if m != nil {
		return m.Type
	}
	return ReplayEvent_UNSET
}

func (m *ReplayEvent) GetReplayId() string {
	if m != nil {
		return m.ReplayId
	}
	return ""
}

func init() {
	proto.RegisterEnum("events.DynamicReplay_Type", DynamicReplay_Type_name, DynamicReplay_Type_value)
	proto.RegisterEnum("events.ReplayEvent_Type", ReplayEvent_Type_name, ReplayEvent_Type_value)
	proto.RegisterType((*DynamicReplay)(nil), "events.DynamicReplay")
	proto.RegisterType((*AuthRequest)(nil), "events.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "events.AuthResponse")
	proto.RegisterType((*ReplayEvent)(nil), "events.ReplayEvent")
}

func init() { proto.RegisterFile("dynamic-replay.proto", fileDescriptor_2e3c3965895a4ee3) }

var fileDescriptor_2e3c3965895a4ee3 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x4d, 0x8f, 0x93, 0x40,
	0x1c, 0xc6, 0xcb, 0x6e, 0xbb, 0xbb, 0xfd, 0xf7, 0x45, 0x3a, 0xf6, 0x40, 0xd6, 0x44, 0x1b, 0x4e,
	0x3d, 0xb8, 0x90, 0xac, 0x17, 0x13, 0xdd, 0x03, 0xb5, 0xa3, 0x34, 0xb1, 0x2f, 0x0e, 0x60, 0xa2,
	0x07, 0x09, 0x2f, 0x63, 0x21, 0xb6, 0x0c, 0x32, 0xb0, 0x49, 0xfd, 0x6a, 0x7e, 0x01, 0x3f, 0x96,
	0x81, 0x81, 0xb5, 0x8d, 0x1e, 0x3c, 0x3e, 0xcf, 0xff, 0x79, 0xa6, 0xfd, 0xff, 0x66, 0x80, 0x71,
	0x78, 0x48, 0xbc, 0x7d, 0x1c, 0xdc, 0x64, 0x34, 0xdd, 0x79, 0x07, 0x2d, 0xcd, 0x58, 0xce, 0xd0,
	0x05, 0xbd, 0xa7, 0x49, 0xce, 0xaf, 0x87, 0xac, 0xc8, 0x7d, 0x56, 0x24, 0xa1, 0xf0, 0xd5, 0x9f,
	0xe7, 0x30, 0x98, 0x8b, 0x02, 0xa9, 0xf2, 0x48, 0x83, 0x76, 0x7e, 0x48, 0xa9, 0x22, 0x4d, 0xa4,
	0xe9, 0xf0, 0xf6, 0x5a, 0x13, 0x45, 0xed, 0x24, 0xa4, 0xd9, 0x87, 0x94, 0x92, 0x2a, 0x87, 0x9e,
	0x40, 0x57, 0xfc, 0x92, 0x1b, 0x87, 0xca, 0xd9, 0x44, 0x9a, 0x76, 0xc9, 0x95, 0x30, 0x16, 0x21,
	0x7a, 0x09, 0x7d, 0xaf, 0xc8, 0x23, 0x37, 0xa3, 0xdf, 0x0b, 0xca, 0x73, 0x25, 0x9c, 0x48, 0xd3,
	0xde, 0xed, 0xe3, 0xe6, 0x50, 0xa3, 0xc8, 0x23, 0x22, 0x46, 0x66, 0x8b, 0xf4, 0xbc, 0x3f, 0x12,
	0xbd, 0x82, 0x41, 0xdd, 0xe4, 0x29, 0x4b, 0x38, 0x55, 0x68, 0x55, 0x1d, 0x9f, 0x56, 0xc5, 0xcc,
	0x6c, 0x91, 0xbe, 0x77, 0xa4, 0xd1, 0x1d, 0xc8, 0xcd, 0x9e, 0xee, 0x9e, 0x72, 0xee, 0x6d, 0xa9,
	0xf2, 0xb5, 0xea, 0xcb, 0x4d, 0x7f, 0x5d, 0xcf, 0xcd, 0x16, 0x79, 0xd4, 0x64, 0x97, 0x22, 0x8a,
	0x5e, 0xc3, 0xb0, 0x5e, 0xa9, 0x29, 0x6f, 0x4f, 0xff, 0xb7, 0xa0, 0x80, 0x4b, 0x61, 0xb6, 0xc8,
	0x40, 0x84, 0xeb, 0xb6, 0xfa, 0x05, 0xda, 0x25, 0x1e, 0xd4, 0x85, 0x8e, 0xb3, 0xb2, 0xb0, 0x2d,
	0xb7, 0x90, 0x0c, 0x7d, 0xc3, 0xb1, 0x4d, 0x97, 0xe0, 0x0f, 0x0e, 0xb6, 0x6c, 0x59, 0x42, 0x23,
	0x18, 0xd4, 0x8e, 0xb5, 0x59, 0xaf, 0x2c, 0x2c, 0x9f, 0xa1, 0x31, 0xc8, 0x6b, 0xc7, 0x9e, 0xad,
	0x9d, 0xd5, 0xdc, 0x5d, 0x62, 0xcb, 0x32, 0xde, 0x61, 0xf9, 0xbc, 0xac, 0x12, 0xbc, 0x79, 0x6f,
	0x7c, 0x72, 0xf1, 0x47, 0xbc, 0xb2, 0xe5, 0xf6, 0xac, 0x0b, 0x97, 0xa9, 0x77, 0xd8, 0x31, 0x2f,
	0x54, 0xe7, 0xd0, 0x3b, 0x42, 0x88, 0xc6, 0xd0, 0xc9, 0xd9, 0x37, 0x9a, 0x54, 0x77, 0xd7, 0x25,
	0x42, 0xa0, 0x67, 0xd0, 0xab, 0xd7, 0x70, 0xfd, 0x82, 0xd7, 0x57, 0x04, 0xb5, 0x35, 0x2b, 0xb8,
	0x6a, 0x42, 0xff, 0x98, 0x26, 0x7a, 0x0a, 0x50, 0xd2, 0x64, 0x59, 0xfc, 0x83, 0x86, 0xd5, 0x59,
	0x57, 0xe4, 0xc8, 0x41, 0x0a, 0x5c, 0x36, 0x5c, 0xc4, 0x61, 0x8d, 0x54, 0x7f, 0x49, 0xd0, 0x3b,
	0x62, 0x83, 0x9e, 0x9f, 0xbc, 0x25, 0xe5, 0x1f, 0xf8, 0xfe, 0xf7, 0x25, 0xa9, 0xc9, 0xdf, 0x54,
	0x47, 0x30, 0x78, 0x43, 0xb0, 0x61, 0x63, 0x57, 0x10, 0x92, 0xa5, 0x92, 0xd6, 0xc6, 0x70, 0xac,
	0x07, 0xe7, 0xac, 0x0c, 0x11, 0x6c, 0x39, 0xcb, 0x07, 0xab, 0x42, 0x6a, 0xcc, 0xd6, 0xc4, 0x6e,
	0x9c, 0x76, 0x19, 0x7a, 0xbb, 0x58, 0x2d, 0x2c, 0xb3, 0xb1, 0x3a, 0x33, 0x1b, 0x46, 0x3c, 0xd2,
	0x7c, 0x2f, 0x0f, 0x22, 0x8d, 0xd3, 0xec, 0x3e, 0x0e, 0x28, 0xdf, 0x48, 0x9f, 0xef, 0xb6, 0x71,
	0x1e, 0x15, 0xbe, 0x16, 0xb0, 0xbd, 0x5e, 0x0d, 0x03, 0x96, 0xa5, 0x7a, 0xc0, 0x76, 0x3b, 0x1a,
	0xe4, 0x2c, 0xbb, 0xe1, 0x41, 0x44, 0xf7, 0x1e, 0xd7, 0xfd, 0x22, 0xde, 0x85, 0xfa, 0x96, 0xe9,
	0xd5, 0x67, 0xc6, 0x75, 0xb1, 0xb9, 0x7f, 0x51, 0xc9, 0x17, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x0c, 0xc8, 0x35, 0x56, 0xa5, 0x03, 0x00, 0x00,
}
